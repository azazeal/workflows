run-name: Test Go package

on:
  workflow_call:
    inputs:
      go-version-file:
        type: string
        default: go.mod
        description: Path to go.mod or go.work file

      disable-macos:
        type: boolean
        default: false
        description: Disable running tests on the MacOS O/S

      disable-ubuntu:
        type: boolean
        default: false
        description: Disable running tests on the Ubuntu O/S

      disable-windows:
        type: boolean
        default: false
        description: Disable running tests on the Windows O/S

      disable-coverage-upload:
        type: boolean
        default: false
        description: Disable uploading the coverage report

jobs:
  targets:
    name: Determine O/Ses
    runs-on: ubuntu-latest
    outputs:
      json: ${{ steps.determine.outputs.json }}

    steps:
      - name: Determine O/Ses
        id: determine
        run: |
          TARGETS=[]

          if ! ${{ inputs.disable-macos }}; then
            TARGETS=$(echo "${TARGETS}" | jq -c '. + [ "macos" ]')
          fi

          if ! ${{ inputs.disable-ubuntu }}; then
            TARGETS=$(echo "${TARGETS}" | jq -c '. + [ "ubuntu" ]')
          fi

          if ! ${{ inputs.disable-windows }}; then
            TARGETS=$(echo "${TARGETS}" | jq -c '. + [ "windows" ]')
          fi

          echo json="${TARGETS}" >> "${GITHUB_OUTPUT}"

  test:
    name: Test Go package (${{ matrix.os }})
    runs-on: ${{ matrix.os }}-latest
    needs: targets
    strategy:
      matrix:
        os: ${{ fromJson(needs.targets.outputs.json) }}

    steps:
      - name: Checkout code
        uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f # v4.1.3
        with:
          submodules: recursive

      - name: Setup Go
        id: setup-go
        uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5.0.0
        with:
          go-version-file: ${{ inputs.go-version-file }}
          check-latest: true

      - name: Install gotestsum
        run: |
          go install gotest.tools/gotestsum@v1

      - name: Run test suite
        run: |
          gotestsum -- -race -coverpkg=./... -coverprofile=coverprofile -covermode=atomic ./...
        env:
          GOTESTSUM_JSONFILE: gotestsum.json

      - name: Annotate test suite results
        if: ${{ (success() || failure()) && hashFiles('gotestsum.json') != '' }}
        uses: guyarb/golang-test-annotations@2941118d7ef622b1b3771d1ff6eae9e90659eb26 # v0.8.0
        with:
          test-results: gotestsum.json

      - name: Upload coverage to Coveralls (parallel)
        if: ${{ ! inputs.disable-coverage-upload }}
        uses: shogo82148/actions-goveralls@v1
        with:
          parallel: true
          path-to-profile: coverprofile
          flag-name: go${{ steps.setup-go.outputs.go-version }}-${{ matrix.os }}

  finalize:
    name: Finalize Coveralls coverage uploads
    needs: test
    if: ${{ ! inputs.disable-coverage-upload }}
    runs-on: ubuntu-latest
    steps:
      - name: Finalize coverage report uploads
        uses: shogo82148/actions-goveralls@v1
        with:
          parallel-finished: true
